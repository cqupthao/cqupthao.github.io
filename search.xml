<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo 搭建个人博客和 Matery 主题配置优化</title>
      <link href="/posts/45644.html"/>
      <url>/posts/45644.html</url>
      
        <content type="html"><![CDATA[<hr><h1 id="Hexo-的安装"><a class="header-anchor" href="#Hexo-的安装">☃</a>Hexo 的安装</h1><hr><p><a href="https://hexo.io/themes/">Hexo</a> 是一款基于 Node.js 的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在 GitHub 、Gitee 上，是搭建博客的首选框架。</p><hr><h2 id="安装-Git"><a class="header-anchor" href="#安装-Git">☃</a>安装 Git</h2><hr><p>Git 是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span> <span class="token parameter variable">-y</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="安装-Node-js"><a class="header-anchor" href="#安装-Node-js">☃</a>安装 Node.js</h2><hr><p>Hexo 是基于 Node.js 编写的，所以需要安装一下 Node.js 和 npm 工具。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> nodejs <span class="token function">npm</span> <span class="token parameter variable">-y</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完后，输入如下命令，检查是否安装成功。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>升级 npm 到最新版本，更换 npm 源为淘宝源。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">npm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="升级-Node-js-版本"><a class="header-anchor" href="#升级-Node-js-版本">☃</a>升级 Node.js 版本</h2><hr><ul><li>清除 npm 缓存</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> cache clean <span class="token parameter variable">-f</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>安装 Node.js 版本管理工具 n</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> n <span class="token parameter variable">-g</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>查看 Node.js 所有版本</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> view <span class="token function">node</span> versions<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>升级 Node.js 版本</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 升级到指定的版本：n 版本号</span>n <span class="token number">16.0</span>.0<span class="token comment"># 升级到最新的稳定版本</span>n stable<span class="token comment"># 升级到最新版本，不推荐</span>n latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用 <code>node -v</code> 查看 Node.js 版本，如果版本号改变为想要的则升级成功。如果版本号没变，可以重启机器或者尝试以下方法：</p><ol><li>查看安装 Node.js 的位置</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">which</span> <span class="token function">node</span>  /usr/local/n/versions/node/16.0.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li>进入该位置</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/n/versions/node<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>编辑 <code>/etc/profile</code> ，将 Node.js 安装的路径，添加到文件末尾</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">NODE_HOME</span><span class="token operator">=</span>/usr/local/n/versions/node/16.0.0<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$NODE_HOME</span>/bin:<span class="token environment constant">$PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="4"><li>输入 wq 退出保存文件，再编译 <code>/etc/profile</code></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="安装-Hexo"><a class="header-anchor" href="#安装-Hexo">☃</a>安装 Hexo</h2><hr><p>前面 Git 和 Node.js 安装好后，就可以正式进行安装 Hexo 。</p><ol><li>安装 Hexo</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>查看版本信息</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="初始化-Hexo"><a class="header-anchor" href="#初始化-Hexo">☃</a>初始化 Hexo</h2><hr><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init filename（文件名随意定义）<span class="token builtin class-name">cd</span> filename //进入这个文件夹<span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ul><li>hexo init</li></ul><blockquote><p>说明：自动在文件夹（filename）中创建项目所需的文件</p></blockquote><ul><li>cd filename</li></ul><blockquote><p>说明：将操作位置转移到将要存放项目的文件夹目录</p></blockquote><ul><li>npm install</li></ul><blockquote><p>说明：安装依赖包</p></blockquote><p>新建完成后，指定文件夹目录下有：</p><p><img src="https://tao7app.files.wordpress/2023/02/IMG_20230220_111336.png" alt=""></p><ul><li><code>_config.yml</code> ：站点的配置文件，需要备份。</li><li><code>themes</code> ：主题文件夹，需要备份。</li><li><code>source</code> ：博客文章的 .md 文件，需要备份。</li><li><code>scaffolds</code> ：文章的模板，需要备份。</li><li><code>package.json</code> ：安装包的名称，需要备份。</li><li><code>.gitignore</code> ：限定在 push 时哪些文件可以忽略，需要备份 .git ：主题和站点都有，标志这是一个 git 项目，不需要备份。</li><li><code>node_modules</code> ：是安装包的目录，在执行 npm install 的时候会重新生成，不需要备份。</li><li><code>public</code> ：是 hexo g 生成的静态网页，不需要备份。</li><li><code>deploy_git</code> ：同上，hexo g 也会生成，不需要备份。</li><li><code>db.json</code> ：文件，不需要备份。</li></ul><hr><h2 id="启动-Hexo-服务"><a class="header-anchor" href="#启动-Hexo-服务">☃</a>启动 Hexo 服务</h2><hr><p>正确安装完成后便按照下面操作启动 Hexo 博客。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generate <span class="token comment"># 生成静态页面至 public 目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server <span class="token comment"># 开启预览访问端口（默认端口 4000 ，ctrl + c 关闭 server ）</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://tao7app.files.wordpress.com/2023/01/Screenshot_2023_0110_211105.png" alt="启动 Hexo 服务"></p><p>打开浏览器输入对应的网址 <strong><a href="http://localhost:4000">http://localhost:4000</a></strong> ，就可以看到生成的博客。</p><p><img src="https://tao7app.files.wordpress.com/2023/01/img_20230108_005221.png" alt="hexo 博客首页"></p><hr><h1 id="Hexo-部署到-GitHub"><a class="header-anchor" href="#Hexo-部署到-GitHub">☃</a>Hexo 部署到 GitHub</h1><hr><hr><h2 id="在-GitHub-官网上创建个人仓库"><a class="header-anchor" href="#在-GitHub-官网上创建个人仓库">☃</a>在 GitHub 官网上创建个人仓库</h2><hr><p>注册登录 <a href="https://github.com/">github官网</a>，点击右上角加号，点击 New repository ，新建仓库。</p><p><img src="https://tao7app.files.wordpress.com/2022/12/screenshot_2020_0801_1453048826363041159371369.png" alt=""></p><p>创建一个和用户名相同的仓库（即 <strong><a href="http://xxxx.github.io">http://xxxx.github.io</a></strong> ，其中 <code>xxx</code> 是 github 的用户名），点击 Greate Repository 。</p><p><img src="https://tao7app.files.wordpress.com/2022/12/screenshot_2020_0801_1456556257341474192203571.png" alt=""></p><hr><h2 id="Git-初始化设置"><a class="header-anchor" href="#Git-初始化设置">☃</a>Git 初始化设置</h2><hr><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"your name"</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"your email"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（your name 是 github 用户名，your email 是注册 github 的邮箱）</p><hr><h2 id="查看设置是否正确"><a class="header-anchor" href="#查看设置是否正确">☃</a>查看设置是否正确</h2><hr><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config user.name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="生成-SSH-添加到-GitHub"><a class="header-anchor" href="#生成-SSH-添加到-GitHub">☃</a>生成 SSH 添加到 GitHub</h2><hr><ul><li>创建 SSH ，默认回车</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"your email"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><p><img src="https://tao7app.files.wordpress.com/2022/12/img_20200802_1139583858709568397913356.jpg" alt=""></p><ul><li>查看 SSH KEY</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://tao7app.files.wordpress.com/2022/12/img_20200803_0950183625923031218189922.jpg" alt=""></p><ul><li>复制 <code>id_rsa.pub</code> 里面的全部内容，在 GitHub 的 Setting 中，找到 SSH keys 的设置选项，点击 New SSH key，粘贴 <code>id_rsa.pub</code> 里面的全部内容。</li></ul><p><img src="https://tao7app.files.wordpress.com/2022/12/screenshot_2020_0801_151404755358037895170688.png" alt=""></p><ul><li>查看是否连接成功</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://tao7app.files.wordpress.com/2022/12/img_20200803_0950365347089596365232504.jpg" alt=""></p><ul><li>打开 Hexo 根目录下的配置文件 <code>_config.yml</code> ，复制修改如下内容</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>     <span class="token key atrule">type</span><span class="token punctuation">:</span> git    <span class="token key atrule">repo</span><span class="token punctuation">:</span>          git@github.com<span class="token punctuation">:</span>XXX/XXX.github.io.git <span class="token comment"># `XXX` 是 github 配置的仓库名</span>    <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Hexo-部署到-GitHub-Pages"><a class="header-anchor" href="#Hexo-部署到-GitHub-Pages">☃</a>Hexo 部署到 GitHub Pages</h2><hr><ul><li>在部署到 GitHub 之前，安装如下扩展</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>部署到 GitHub</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo g <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>完成后浏览器访问 <strong><a href="https://xxx.github.io/">https://xxx.github.io/</a></strong> （xxx 是 github 账号昵称）就可以看见和网址 <strong><a href="http://localhost:4000">http://localhost:4000</a></strong> 一样的内容了。</p><hr><h1 id="Hexo-部署到-Gitee"><a class="header-anchor" href="#Hexo-部署到-Gitee">☃</a>Hexo 部署到 Gitee</h1><hr><hr><h2 id="在-Gitee-官网上创建个人仓库"><a class="header-anchor" href="#在-Gitee-官网上创建个人仓库">☃</a>在 Gitee 官网上创建个人仓库</h2><hr><p>打开<a href="https://gitee.com/">码云官网</a>，注册登陆，创建项目，点击右上角加号，新建仓库。</p><p><img src="https://tao7app.files.wordpress.com/2022/12/screenshot_2020_0802_2310411783559666911033042.png" alt=""></p><hr><p><img src="https://tao7app.files.wordpress.com/2022/12/screenshot_2020_0802_23111427248098453871943831.png" alt="创建仓库"></p><p>开启 Gitee Pages 服务。</p><p><img src="https://tao7app.files.wordpress.com/2022/12/screenshot_2020_0802_231221568468301236150357.png" alt=""></p><hr><p><img src="https://tao7app.files.wordpress.com/2022/12/img_20200803_0937147843036425501178044.jpg" alt="开启 Gitee Pages 服务"></p><p>点击启动后出现蓝色链接就是生成的博客网址。</p><p><img src="https://tao7app.files.wordpress.com/2022/12/screenshot_2020_0802_2314342325756989210353055.png" alt="生成的网址"></p><hr><h2 id="初始化-Git-设置"><a class="header-anchor" href="#初始化-Git-设置">☃</a>初始化 Git 设置</h2><hr><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"这里输入你的 gitee 注册名"</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"这里输你的 gitee 邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="查看设置是否正确-v2"><a class="header-anchor" href="#查看设置是否正确-v2">☃</a>查看设置是否正确</h2><hr><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config user.name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="生成-SSH-添加到-Gitee"><a class="header-anchor" href="#生成-SSH-添加到-Gitee">☃</a>生成 SSH 添加到 Gitee</h2><hr><ul><li>创建 SSH ，默认回车</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"your email"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://tao7app.files.wordpress.com/2022/12/img_20200802_1139583858709568397913356.jpg" alt=""></p><ul><li>查看 SSH KEY</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://tao7app.files.wordpress.com/2022/12/img_20200803_0950183625923031218189922.jpg" alt=""></p><ul><li>复制 <code>id_rsa.pub</code> 里面的全部内容，在 gitee 的管理中，找到添加公钥的设置选项，点击 New SSH key ，粘贴 <code>id_rsa.pub</code> 里面的全部内容</li></ul><p><img src="https://tao7app.files.wordpress.com/2022/12/screenshot_2020_0802_2316484808107369418949929.png" alt=""></p><ul><li>查看是否连接成功</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@gitee.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>点击复制克隆或下载里面的 https 的内容，打开 Hexo 根目录下的 <code>_config.yml</code> 配置文件，复制修改如下内容</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">url</span><span class="token punctuation">:</span> Gitee Pages 服务网站地址： https<span class="token punctuation">:</span>//空间名.gitee.io/仓库名<span class="token key atrule">root</span><span class="token punctuation">:</span> /仓库名/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>      <span class="token key atrule">type</span><span class="token punctuation">:</span> git      <span class="token key atrule">repo</span><span class="token punctuation">:</span>        git@gitee.com<span class="token punctuation">:</span>https<span class="token punctuation">:</span>//gitee.com/XXX/XXX.git     <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><center> 最终配置形式 </center><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>     <span class="token key atrule">type</span><span class="token punctuation">:</span> git     <span class="token key atrule">repo</span><span class="token punctuation">:</span>       github<span class="token punctuation">:</span>git@githun.com/bearhao/bearhao.github.io.git  <span class="token comment"># bearhao 为账户名</span>       gitee<span class="token punctuation">:</span>git@gitee.com/bearhao/bearhao.git  <span class="token comment"># bearhao 为账户名</span>     <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Hexo-部署到-Gitee-Pages"><a class="header-anchor" href="#Hexo-部署到-Gitee-Pages">☃</a>Hexo 部署到 Gitee Pages</h2><hr><ul><li>在部署到 Gitee 之前，安装如下扩展</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>部署到 Gitee</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo g <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>完成后浏览器访问 <strong><a href="https://xxx.gitee.io/">https://xxx.gitee.io/</a></strong> （xxx 是 gitee 账号昵称）就可以看见和网址 <strong><a href="http://localhost:4000">http://localhost:4000</a></strong> 一样的内容了。</p><hr><p>更多基础配置可以参考<a href="https://hexo.io/zh-cn/docs/configuration">官方文档</a>的配置说明。</p><hr><h1 id="Matery-主题安装及优化"><a class="header-anchor" href="#Matery-主题安装及优化">☃</a>Matery 主题安装及优化</h1><hr><ul><li><p>Matery 主题安装参考 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">Matery 官网教程</a></p></li><li><p>Matery 优化参考 <a href="https://blog.17lai.site/posts/40300608/">基于 Hexo 的 Matery 主题搭建博客并深度优化一站式完全教程</a></p></li></ul><hr><h1 id="Hexo-插件安装"><a class="header-anchor" href="#Hexo-插件安装">☃</a>Hexo 插件安装</h1><hr><hr><h2 id="代码高亮"><a class="header-anchor" href="#代码高亮">☃</a>代码高亮</h2><hr><p>从 Hexo5.0 版本开始自带了 prismjs 代码语法高亮的支持，如果博客安装过 <code>hexo-prism-plugin</code> 的插件，须执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&amp;#123;</code> 和 <code>&amp;#125;</code> 的转义字符。</p><p>修改 Hexo 根目录下 <code>_config.yml</code> 文件中 highlight.enable 的值为 false ，并将 prismjs.enable 的值设置为 true ，主要配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主题中默认的 prismjs 主题是 Tomorrow Night ，如果想定制自己的主题，可前往 <a href="https://prismjs.com/download.html">prismjs 下载页面</a>  定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 <code>css</code> 主题文件取名为 <code>prism.css</code>，替换掉 Matery 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件。</p><hr><h2 id="搜索"><a class="header-anchor" href="#搜索">☃</a>搜索</h2><hr><p>使用 <code>hexo-generator-search</code> 的 Hexo 插件来实现内容搜索，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="中文链接转拼音"><a class="header-anchor" href="#中文链接转拼音">☃</a>中文链接转拼音</h2><hr><p>使用 <code>hexo-permalink-pinyin</code> 的 Hexo 插件使在生成文章时生成中文拼音的永久链接，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，就可以生成拼音链接。</p><hr><h2 id="文章生成永久链接"><a class="header-anchor" href="#文章生成永久链接">☃</a>文章生成永久链接</h2><hr><p>使用 <code>hexo-abbrlink</code> 的 Hexo 插件来实现文章生成永久链接，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-abbrlink <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">abbrlink</span><span class="token punctuation">:</span>     <span class="token key atrule">alg</span><span class="token punctuation">:</span> crc16 <span class="token comment">#算法：</span>    <span class="token key atrule">rep</span><span class="token punctuation">:</span> hex <span class="token comment">#输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>将 <code>_config.yml</code> 文件中的 permalink 的值修改为如下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink</span><span class="token punctuation">:</span> posts/<span class="token punctuation">:</span>abbrlink.html  <span class="token comment"># 此处可以自己设置，也可以直接使用 :/abbrlink</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，就可以生成永久链接。生成完后，原 md 文件的 Front-matter 内会增加 abbrlink 字段，值为生成的 ID 。</p><hr><h2 id="外链跳转"><a class="header-anchor" href="#外链跳转">☃</a>外链跳转</h2><hr><p>使用 <code>hexo-external-link</code> 的 Hexo 插件来实现外链跳转，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-external-link <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">hexo_external_link</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">enable_base64_encode</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">url_param_name</span><span class="token punctuation">:</span> <span class="token string">'u'</span>  <span class="token key atrule">html_file_name</span><span class="token punctuation">:</span> <span class="token string">'go.html'</span>  <span class="token key atrule">target_blank</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">link_rel</span><span class="token punctuation">:</span> <span class="token string">'external nofollow noopener noreferrer'</span>  <span class="token key atrule">domain</span><span class="token punctuation">:</span> <span class="token string">'your_domain'</span> <span class="token comment"># 如果开启了防盗链，填写你的域名</span>  <span class="token key atrule">safety_chain</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，就可以实现外链跳转。</p><hr><h2 id="文章字数统计"><a class="header-anchor" href="#文章字数统计">☃</a>文章字数统计</h2><hr><p>使用 <code>hexo-wordcount</code> 的 Hexo 插件来实现在文章中统计显示文章字数、阅读时长信息，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-wordcount <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Matery 主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置文章字数统计为 true</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置站点文章总字数统计为 true </span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读时长</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读次数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，就可以实现文章字数统计。</p><hr><h2 id="添加-emoji-表情支持"><a class="header-anchor" href="#添加-emoji-表情支持">☃</a>添加 emoji 表情支持</h2><hr><p>使用 <code>hexo-filter-github-emojis</code> 的 Hexo 插件来支持 emoji 表情的生成，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中用 emoji 语法写表情。</p><hr><h2 id="添加-RSS-订阅支持"><a class="header-anchor" href="#添加-RSS-订阅支持">☃</a>添加 RSS 订阅支持</h2><hr><p>使用 <code>hexo-generator-feed</code> 的 Hexo 插件来做 RSS，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，在 <code>public</code> 文件夹中看到 <code>atom.xml</code> 文件，说明已安装成功。</p><hr><h2 id="图片懒加载"><a class="header-anchor" href="#图片懒加载">☃</a>图片懒加载</h2><hr><p>使用 <code>hexo-lazyload-image</code> 的 Hexo 插件来实现图片懒加载，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-lazyload-image <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">lazyload</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>   <span class="token key atrule">onlypost</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 是否只对文章的图片做懒加载</span>  <span class="token key atrule">loadingImg</span><span class="token punctuation">:</span> <span class="token comment"># eg ./images/loading.gif</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，一般情况下懒加载会和 gallery 插件会发生冲突，结果可能就是点开图片，左右翻都是 loading image 。解决方法：<br>修改 <code>/themes/matery/source/js</code> 中的 <code>matery.js</code> 文件在第 108 行加上如下内容。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'img[data-original]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-original"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>做完这步之后，还有点小 Bug ，首页的 logo 点击会直接打开 logo 图，而不是跳到首页。伪解决方案：打开  <code>/themes/matery/layout/_partial/header.ejs</code> 文件，在 img 和 span 的两个头加个 div 。</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;div class="brand-logo"&gt;    &lt;a href="&lt;%- url_for() %&gt;" class="waves-effect waves-light"&gt;        &lt;div&gt;            &lt;% if (theme.logo !== undefined &amp;&amp; theme.logo.length &gt; 0) { %&gt;            &lt;img src="&lt;%= theme.logo %&gt;" class="logo-img" alt="LOGO"&gt;            &lt;% } %&gt;            &lt;span class="logo-span"&gt;&lt;%- config.title %&gt;&lt;/span&gt;        &lt;/div&gt;    &lt;/a&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，就可以实现图片懒加载。</p><hr><h2 id="折叠功能"><a class="header-anchor" href="#折叠功能">☃</a>折叠功能</h2><hr><p>使用 <code>hexo-sliding-spoiler</code> 的 Hexo 插件来实现折叠功能，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-sliding-spoiler <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">plugin</span><span class="token punctuation">:</span><span class="token punctuation">-</span> hexo<span class="token punctuation">-</span>sliding<span class="token punctuation">-</span>spoiler<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，就可以实现折叠功能。</p><hr><h2 id="代码压缩"><a class="header-anchor" href="#代码压缩">☃</a>代码压缩</h2><hr><p>使用 <code>hexo-neat</code> 的 Hexo 插件来实现代码压缩，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-neat <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#hexo-neat 优化提速插件（去掉 HTML、css、js 的 blank字符）</span><span class="token key atrule">neat_enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">neat_html</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">exclude</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">'**/*.md'</span><span class="token key atrule">neat_css</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">exclude</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">'**/*.min.css'</span><span class="token key atrule">neat_js</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">mangle</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">compress</span><span class="token punctuation">:</span>  <span class="token key atrule">exclude</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">'**/*.min.js'</span>    <span class="token punctuation">-</span> <span class="token string">'**/**/instantpage.js'</span>    <span class="token punctuation">-</span> <span class="token string">'**/matery.js'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，就可以实现代码压缩了。</p><hr><p>更多的 Hexo 插件安装参考 <a href="https://hexo.io/plugins">Hexo 官网</a></p><hr><h1 id="Hexo-添加-Valine-评论系统"><a class="header-anchor" href="#Hexo-添加-Valine-评论系统">☃</a>Hexo 添加 Valine 评论系统</h1><hr><hr><h2 id="Valine-简介"><a class="header-anchor" href="#Valine-简介">☃</a>Valine 简介</h2><hr><p><a href="https://valine.js.org/">valine</a>  诞生于 2017 年 8 月 7 日，是一款基于  <a href="https://www.leancloud.cn/">LeanCloud</a>  的快速、简洁且高效的无后端评论系统。理论上支持但不限于静态博客，目前已有 Hexo 、Jekyll 、Typecho 、Hugo 、Ghost 等博客程序在使用  <a href="https://valine.js.org/">valine</a> 。</p><p>valine 具有快速安全，Emoji 😉，无后端实现，MarkDown 全语法支持，轻量易用，文章阅读量统计等优质特性。</p><hr><h2 id="Valine-的配置"><a class="header-anchor" href="#Valine-的配置">☃</a>Valine 的配置</h2><hr><ul><li>在 <a href="https://console.leancloud.cn/">LeanCloud 官网</a>注册登录，创建一个应用，然后进入应用，点击设置，找到应用凭证，复制 AppID 和 AppKey 到 Matery 主题的 <code>config.yml</code> 配置文件中的对应位置</li></ul><p><img src="https://tao7app.files.wordpress.com/2023/01/02017.png" alt="AppID 和 AppKey"></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey 。</span><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span>  <span class="token comment"># 将应用 key 的 AppID 设置在这里</span>  <span class="token key atrule">appKey</span><span class="token punctuation">:</span> <span class="token comment"># 将应用 key 的 AppKey 设置在这里</span>  <span class="token key atrule">serverURLs</span><span class="token punctuation">:</span>  <span class="token comment"># https://你的api</span>  <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 邮箱通知</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 验证码 默认为 false</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 是否允许游客评论</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> <span class="token string">'mm'</span> <span class="token comment"># 头像风格，默认为 mm ，可进入网址: mm/identicon/monsterid/wavatar/retro/hide</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> <span class="token string">'just go go'</span> <span class="token comment"># Comment Box placeholder</span>  <span class="token key atrule">background</span><span class="token punctuation">:</span> /medias/comment_bg.png  <span class="token key atrule">coolpushkey</span><span class="token punctuation">:</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>升级 valine 版本</li></ul><p>进入 <a href="https://unpkg.com/valine/dist/">valine 官网</a>， 选择 valine 版本后点击 <code>Valine.min.js</code> ，点击 View Raw 后复制 全部内容，粘贴替换 Matery 主题下的 <code>/source/libs/valine/Valine.min.js</code> 文件全部内容。</p><p><img src="https://tao7app.files.wordpress.com/2023/01/135.png" alt="Valine.min.js 文件"></p><p>修改 Matery 主题目录下的 <code>_comfig.yml</code> 配置文件如下内容。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span> iTxfqh5e9IaRfiiVOTbIWoKa<span class="token punctuation">-</span>XXXXXX  <span class="token key atrule">appKey</span><span class="token punctuation">:</span> C5s5xGFErD1EtXXXXXXXX  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 是否启用防垃圾验证</span>  <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 是否开启邮件提醒(https://valine.js.org/notify.html)</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> monsterid  <span class="token comment"># 头像样式(https://valine.js.org/avatar.html) </span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> <span class="token string">'ヾﾉ≧∀≦)o来啊，快活啊!'</span> <span class="token comment"># Comment Box placeholder</span>  <span class="token key atrule">background</span><span class="token punctuation">:</span> /medias/comment_bg.png <span class="token comment">#背景图</span>  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">enableQQ</span><span class="token punctuation">:</span> <span class="token number">2733443175</span>  <span class="token key atrule">recordIP</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">requiredFields</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> nick    <span class="token punctuation">-</span> mail  <span class="token key atrule">guest_info</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> nick    <span class="token punctuation">-</span> mail    <span class="token punctuation">-</span> link  <span class="token key atrule">master</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> 123abc508165c8eba9a77f872xxxx046  <span class="token comment"># MD5 加密后的博主邮箱</span>  <span class="token key atrule">metaPlaceholder</span><span class="token punctuation">:</span>  <span class="token comment"># 输入框的背景文字</span>    <span class="token key atrule">nick</span><span class="token punctuation">:</span> 昵称 / QQ 号（必填）    <span class="token key atrule">mail</span><span class="token punctuation">:</span> 邮箱（用于获取通知信息）    <span class="token key atrule">link</span><span class="token punctuation">:</span>   <span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN  <span class="token key atrule">tagMeta</span><span class="token punctuation">:</span> <span class="token comment"># The String Array of Words to show Flag ，[Just Only xCss Style modle]</span>    <span class="token punctuation">-</span> 博主    <span class="token punctuation">-</span> 小伙伴    <span class="token punctuation">-</span> 访客<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更多 valine 配置参数信息请参考 <a href="https://valine.js.org/">valine 官方文档</a></p><ul><li>管理评论</li></ul><p>点击 <code>存储 -&gt; 结构化数据</code> ，选择创建 Class ，名称  <code>Comment</code> ，其它保持默认，以后 Hexo 博客的评论就可在这个 Class 内查看，删除等。</p><p><img src="https://tao7app.files.wordpress.com/2023/01/40522.png" alt="创建 Comment"></p><ul><li>文章阅读量统计</li></ul><p>点击 <code>存储 -&gt; 结构化数据</code> ，选择创建 Class ，名称 <code>Counter</code> ，其它保持默认，以后就可在这个 Class 内查看。</p><p><img src="https://tao7app.files.wordpress.com/2023/01/40502.png" alt="创建 Counter"></p><hr><h2 id="增加点击跳转评论按钮"><a class="header-anchor" href="#增加点击跳转评论按钮">☃</a>增加点击跳转评论按钮</h2><hr><p>在 Matery 主题目录 <code>/layout/_partial/</code>  下新建 <code>back-comment.ejs</code> 文件 , 复制粘贴如下代码。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 直达评论 <span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"to_comment"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"comment-scroll"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn-floating btn-large waves-effect waves-light"</span> href<span class="token operator">=</span><span class="token string">"#vcomments"</span> title<span class="token operator">=</span><span class="token string">"直达评论"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fas fa-comments"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 Matery 主题目录 <code>/layout/_partial/</code>  下的 <code>valine.ejs</code> 文末添加一条如下代码，引用第一步的内容。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/back-comment.ejs'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>只有 valine 存在的页面才显示直达评论，为了防止首页其它地方也出现按钮，在 Matery 主题目录 <code>/source/css/</code> 下的 <code>matery.css</code> 文件添加如下内容。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*直达评论按钮样式*/</span><span class="token selector">.comment-scroll</span> <span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 135px<span class="token punctuation">;</span> # bottom ：135px 是距离底部的高度    <span class="token property">padding-top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 998<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.comment-scroll .btn-floating</span> <span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to bottom right<span class="token punctuation">,</span> #FF9999 0%<span class="token punctuation">,</span> #ff6666 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.comment-scroll .btn-floating i</span> <span class="token punctuation">{</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="实现-Valine-评论系统通知功能"><a class="header-anchor" href="#实现-Valine-评论系统通知功能">☃</a>实现 Valine 评论系统通知功能</h1><hr><p>Valine-Admin 项目是一个对  <a href="https://valine.js.org/">valine</a>  评论系统的拓展应用，可以增强 valine 的邮件通知功能。基于 LeanCloud 的云引擎与云函数，主要实现评论邮件通知、评论管理、自定义邮件通知模板等功能，还可以提供邮件 <code>通知站长</code> 和 <code>@通知</code> 的功能。具体操作如下：</p><ul><li><p>确保 valine 的基础功能是是否正常，参考 <a href="https://valine.js.org/">valine 官方文档</a></p></li><li><p>进入 <a href="https://leancloud.cn/dashboard/applist.html#/apps">LeanCloud</a>  对应的 valine 应用中</p></li><li><p>点击 <code>云引擎 -&gt; 部署</code> ，选择 <code>Git 源码部署</code> ，填写代码 <code>https://github.com/HCLonely/Valine-Admin</code> ，点击保存，分支或版本号输入 <code>master</code> ，下载最新依赖（可选），点击部署</p></li></ul><p><img src="https://tao7app.files.wordpress.com/2023/01/0547.png" alt=""></p><ul><li>设置 <code>自定义环境变量</code> ，需要设置云引擎的环境变量以提供必要的信息，变量参数参考下面的 <code>配置项表</code></li></ul><table><thead><tr><th style="text-align:left">变量</th><th style="text-align:left">示例</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">SITE_NAME</td><td style="text-align:left">blog</td><td style="text-align:left">[必填] 网站名称</td></tr><tr><td style="text-align:left">SITE_URL</td><td style="text-align:left"><a href="https://xxx.github.io">https://xxx.github.io</a></td><td style="text-align:left">[必填] 网站地址，最后不要加 /</td></tr><tr><td style="text-align:left">SMTP_SERVICE</td><td style="text-align:left">QQ</td><td style="text-align:left">[必填] 邮件服务提供商，支持 QQ、163、126、Gmail 以及更多</td></tr><tr><td style="text-align:left">SMTP_USER</td><td style="text-align:left"><a href="mailto:xxxx@qq.com">xxxx@qq.com</a></td><td style="text-align:left">[必填] SMTP登录用户，一般为邮箱地址</td></tr><tr><td style="text-align:left">SMTP_PASS</td><td style="text-align:left">xxxx</td><td style="text-align:left">[必填] SMTP登录密码，QQ 授权码,<a href=""></a></td></tr><tr><td style="text-align:left">SENDER_NAME</td><td style="text-align:left">Valine 评论提醒</td><td style="text-align:left">[可选] 通知模板</td></tr><tr><td style="text-align:left">ADMIN_URL</td><td style="text-align:left"><a href="https://xxx.leanapp.cn/">https://xxx.leanapp.cn/</a></td><td style="text-align:left">[建议] Web 主机二级域名，用于自动唤醒</td></tr><tr><td style="text-align:left">TO_EMAIL</td><td style="text-align:left"><a href="mailto:xxxxx@gmail.com">xxxxx@gmail.com</a></td><td style="text-align:left">[可选] 指定站长收信邮箱，默认值为 SITE_USER ，用于 SMTP 发件人与站长收件人不一致的情况下使用</td></tr><tr><td style="text-align:left">TEMPLATE_NAME</td><td style="text-align:left">rainbow</td><td style="text-align:left">[可选] 通知邮件的模板（default 和 rainbow），参考高级功能</td></tr></tbody></table><center> 自定义环境配置 </center><p><img src="https://tao7app.files.wordpress.com/2023/01/706.png" alt=""></p><ul><li>设置后台管理登录信息，点击 <code>存储 -&gt; 结构化数据</code> ，选择 <code>_User -&gt; 添加行</code> ，只需要填写 <code>password</code> 、<code>username</code> 、<code>email</code> 这三个字段即可, 使用 email 作为账号登陆、password 作为账号密码、username 任意即可。（为了安全考虑，此 email 必须为配置中的 <code>SMTP_USER</code> 或 <code>TO_EMAIL</code> ，否则不允许登录）</li></ul><p><img src="https://tao7app.files.wordpress.com/2023/01/35744.png" alt="valine 评论通知效果"></p><hr><p>更多内容访问 <a href="https://blog.17lai.site/posts/9b056c86/">基于 Hexo 的 matery 主题搭建博客个性定制篇</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Matery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Valine </tag>
            
            <tag> Hexo </tag>
            
            <tag> Gitee </tag>
            
            <tag> Matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown 语法</title>
      <link href="/posts/62652.html"/>
      <url>/posts/62652.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="MarkDown-概述"><a class="header-anchor" href="#MarkDown-概述">☃</a>MarkDown 概述</h2><hr><h3 id="宗旨"><a class="header-anchor" href="#宗旨">☃</a>宗旨</h3><p><strong>MarkDown</strong> 的目标是实现「易读易写」。</p><p>一份使用 MarkDown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。</p><h3 id="兼容-HTML"><a class="header-anchor" href="#兼容-HTML">☃</a>兼容 HTML</h3><p><strong>MarkDown</strong> 语法的目标是：成为一种适用于网络的书写语言。</p><p>MarkDown 的构想不是要使得 HTML 文档更容易书写。MarkDown 的设计理念是，能让文档更容易读、写和随意改。</p><hr><h2 id="标题"><a class="header-anchor" href="#标题">☃</a>标题</h2><hr><p>MarkDown 标题有两种格式：</p><ol><li>使用 <strong>=</strong> 和 <strong>-</strong> 标记一级和二级标题。</li></ol><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important">我展示的是一级标题<span class="token punctuation">=================</span></span><span class="token title important">我展示的是二级标题<span class="token punctuation">-----------------</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>使用 <strong>#</strong> 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。</li></ol><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 一级标题</span><span class="token title important"><span class="token punctuation">##</span> 二级标题</span><span class="token title important"><span class="token punctuation">###</span> 三级标题</span><span class="token title important"><span class="token punctuation">####</span> 四级标题</span><span class="token title important"><span class="token punctuation">#####</span> 五级标题</span><span class="token title important"><span class="token punctuation">######</span> 六级标题</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="段落与文本换行"><a class="header-anchor" href="#段落与文本换行">☃</a>段落与文本换行</h2><hr><p>Markdown 段落没有特殊的格式,直接编写文字, 段落换行是使用两个以上的空格加上回车/使用一个空行重新开始一个新的段落/使用 HTML 标签 <code>&lt;br&gt;</code> 。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 段落 (两个空格+回车)  <span class="token list punctuation">2.</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span> 段落 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">&gt;</span></span>（使用 HTML 语言换行标签）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="文本添加缩进"><a class="header-anchor" href="#文本添加缩进">☃</a>文本添加缩进</h2><hr><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">#使用 HTML 标签 &lt;style&gt; 实现&lt;p style="text-indent:1em"&gt;你好呀&lt;/p&gt;&lt;p style="text-indent:2em"&gt;你好呀&lt;/p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><p style="text-indent:1em">你好呀</p><p style="text-indent:2em">你好呀</p><hr><h2 id="字体"><a class="header-anchor" href="#字体">☃</a>字体</h2><hr><p>MarkDown 可以使用以下几种字体：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">*</span><span class="token content">斜体文本</span><span class="token punctuation">*</span></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">粗体文本</span><span class="token punctuation">**</span></span><span class="token bold"><span class="token punctuation">**</span><span class="token content"><span class="token italic"><span class="token punctuation">*</span><span class="token content">粗斜体文本</span><span class="token punctuation">*</span></span></span><span class="token punctuation">**</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="高亮"><a class="header-anchor" href="#高亮">☃</a>高亮</h2><hr><p>MarkDown 使用连续两个单号包括高亮的部分实现内容的高亮。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">==高亮内容==<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="分割线"><a class="header-anchor" href="#分割线">☃</a>分割线</h2><hr><p>在一行中用三个以上的 <strong>星号</strong>、<strong>减号</strong>、<strong>底线</strong> 来建立一个分隔线，行内不能有其他东西或在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">-</span> ***<span class="token hr punctuation">- ---</span><span class="token list punctuation">-</span> ···<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="删除线"><a class="header-anchor" href="#删除线">☃</a>删除线</h2><hr><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线即可。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">~~delete<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="下划线"><a class="header-anchor" href="#下划线">☃</a>下划线</h2><hr><p>下划线可以通过 <strong>HTML</strong> 的标签来实现。</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;u&gt;带下划线文本&lt;/u&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="注释"><a class="header-anchor" href="#注释">☃</a>注释</h2><hr><p>使用 <strong>HTML</strong> 的注释方式。</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;!-- 注释 --&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="脚注"><a class="header-anchor" href="#脚注">☃</a>脚注</h2><hr><p>脚注是对文本的补充说明，MarkDown 脚注标识可以为字母数字下划线，但是暂不支持中文。脚注内容可为任意字符，包括中文。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">创建脚注格式 [^1] [^1] : 菜鸟教程 -- 学的不仅是技术，更是梦想!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="文本居中"><a class="header-anchor" href="#文本居中">☃</a>文本居中</h2><hr><p>使用 <strong>HTML</strong> 可以将文本居中。</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;center&gt;居中的内容&lt;/center&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="列表"><a class="header-anchor" href="#列表">☃</a>列表</h2><hr><p>MarkDown 支持有序列表和无序列表。</p><ul><li>有序列表</li></ul><p>有序列表使用数字并加上 <strong>.</strong> 号来表示。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 第一项<span class="token list punctuation">2.</span> 第二项<span class="token list punctuation">3.</span> 第三项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>无序列表</li></ul><p>无序列表使用 <strong>星号</strong> （ <code>*</code> ）、<strong>加号</strong> （ <code>+</code> ）或是 <strong>减号</strong> （ <code>-</code> ）作为列表标记。</p> <pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 第一项<span class="token list punctuation">*</span> 第二项<span class="token list punctuation">*</span> 第三项------ 分割线 ------<span class="token list punctuation">-</span> 第一项<span class="token list punctuation">-</span> 第二项<span class="token list punctuation">-</span> 第三项------ 分割线 ------<span class="token list punctuation">+</span> 第一项<span class="token list punctuation">+</span> 第二项<span class="token list punctuation">+</span> 第三项  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="区块"><a class="header-anchor" href="#区块">☃</a>区块</h2><hr><ol><li>区块引用</li></ol><p>MarkDown 区块引用是在段落开头使用 <strong>&gt;</strong> 符号 ，然后后面紧跟 <strong>一个空格符号</strong> 。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">&gt;</span> 区块引用<span class="token blockquote punctuation">&gt;</span> 菜鸟教程<span class="token blockquote punctuation">&gt;</span> 学的不仅是技术更是梦想<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li>区块使用列表</li></ol><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">&gt;</span> 区块中使用列表<span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">1.</span> 第一项<span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">2.</span> 第二项<span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">+</span> 第一项<span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">+</span> 第二项<span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">+</span> 第三项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>列表中使用区块</li></ol><p>如果要在列表项目内放进区块，那么就需要在 <strong>&gt;</strong> 前添加四个空格的缩进。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 第一项  &gt; 菜鸟教程    &gt; 学的不仅是技术更是梦想<span class="token list punctuation">*</span> 第二项     &gt;欢迎光临<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="代码与代码块"><a class="header-anchor" href="#代码与代码块">☃</a>代码与代码块</h2><hr><ol><li>单行代码</li></ol><p>如果是单行代码或段落上的一个函数或片段的代码可以用 <strong>反引号对</strong> 把它括起来。</p><p><code>fmt.Println("Hello Word!)</code></p><ol start="2"><li>代码区块</li></ol><p>代码区块使用 <strong>三个反引号对</strong> 包裹一段代码，并指定一种语言（也可以不指定）。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="上标与下标"><a class="header-anchor" href="#上标与下标">☃</a>上标与下标</h2><hr><ol><li>上标使用双 <strong>^</strong> 括住内容</li></ol><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">x^2^<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>下标使用双 <strong>~</strong> 括住内容</li></ol><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">H2<span class="token strike"><span class="token punctuation">~</span><span class="token content">0</span><span class="token punctuation">~</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="超链接"><a class="header-anchor" href="#超链接">☃</a>超链接</h2><hr><ul><li><p>一个方括号 <strong>[]</strong> ，里面放上链接的替代文字</p></li><li><p>接着一个普通括号 <strong>()</strong> ，里面放上网址</p></li></ul><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">链接也可以用变量来代替，文档末尾附带变量地址：这个链接用 1 作为网址变量 <span class="token url">[<span class="token content">Google</span>][<span class="token variable">1</span>]</span>这个链接用 baidu 作为网址变量 <span class="token url">[<span class="token content">百度</span>][<span class="token variable">baidu</span>]</span>然后在文档的结尾为变量赋值（网址）[1]:http://www.google.com/[baidu]:http://www.baidu.com/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="插入图片"><a class="header-anchor" href="#插入图片">☃</a>插入图片</h2><hr><ul><li><p>开头一个 感叹号 <strong>!</strong></p></li><li><p>接着一个 方括号 <strong>[]</strong> ，里面放上图片的替代文字</p></li><li><p>接着一个 普通括号 <strong>()</strong> ，里面放上图片的网址，最后还可以用 <strong>引号</strong> 包住并加上选择性的 <strong>title</strong> 属性的文字</p></li></ul><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">图片</span>](<span class="token url">http://xxx.com/xxx.png</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><p><img src="https://tao7app.files.wordpress.com/2022/12/img_20221210_145354.jpg" alt="图片"></p><hr><h2 id="设置图片"><a class="header-anchor" href="#设置图片">☃</a>设置图片</h2><hr><p>通过 center 居中，把 center 换成 left 和 right 可以实现居左或者居右，width 和 height 调控高度和宽度。</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;div align=center&gt;&lt;img src="http://pic11.photophoto.cn/20090626/0036036341009653_b.jpg" width="251" height="350"&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><div align="center"><img src="http://pic11.photophoto.cn/20090626/0036036341009653_b.jpg" width="251" height="350"></div><hr><hr><h2 id="插入视频"><a class="header-anchor" href="#插入视频">☃</a>插入视频</h2><hr><p>插入视频实现依赖于 <strong>HTML</strong> 。</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;video controls="" autoplay="" name="media"&gt;    &lt;source src="https://www.w3school.com.cn/example/html5/mov_bbb.mp4" type="video/mp4"&gt;&lt;/video&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><p><video controls="" autoplay="" name="media">    <source src="https://www.w3school.com.cn/example/html5/mov_bbb.mp4" type="video/mp4"><br></video></p><hr><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;iframe    width=100%    height=120px    src='//player.bilibili.com/player.html?aid=455564468&amp;bvid=BV1H541147nA&amp;cid=187808769&amp;page=1'    frameborder="0"    allowfullscreen&gt;&lt;/iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><iframe width="100%" height="120px" src="//player.bilibili.com/player.html?aid=455564468&amp;bvid=BV1H541147nA&amp;cid=187808769&amp;page=1" frameborder="0" allowfullscreen=""></iframe><hr><ul><li><p>src 里面填视频原 URL</p></li><li><p>width 是视频宽度（可以填百分比）</p></li><li><p>height 是视频高度（可以填百分比）</p></li></ul><hr><h2 id="插入音乐"><a class="header-anchor" href="#插入音乐">☃</a>插入音乐</h2><hr><p>插入音乐实现依赖于 <strong>HTML</strong> 。</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;div align=center&gt;&lt;iframe frameborder="no" marginwidth="0" marginheight="0" width=300 height=90 src="https://music.163.com/outchain/player?type=2&amp;id=34341360&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><div align="center"><iframe frameborder="no" marginwidth="0" marginheight="0" width="300" height="90" src="https://music.163.com/outchain/player?type=2&amp;id=34341360&amp;auto=0&amp;height=66"></iframe></div><ul><li><p>div 用于控制格式，若无则默认为居左</p></li><li><p>frameborder 用于规定是否显示框架周围的边框，1 为是，0 为否</p></li><li><p>marginwidth 及 marginheight 表示距离边缘的像素大小</p></li><li><p>width 及 height 表示播放条的长度和宽度 src 为播放链接，可以在如网易云音乐的生成外链播放器获取该链接，同时也获得以下代码，并可以自行更改；也可将音频链接改为视频链接，从而播放视频</p></li></ul><hr><h2 id="插入表格"><a class="header-anchor" href="#插入表格">☃</a>插入表格</h2><hr><p>输入 <code>|</code> 表头1 <code>|</code> 表头2 <code>|</code> 并回车,即可创建一个包含 2 列表。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token table"><span class="token table-header-row"><span class="token punctuation">|</span><span class="token table-header important"> 左对齐 </span><span class="token punctuation">|</span><span class="token table-header important"> 右对齐 </span><span class="token punctuation">|</span><span class="token table-header important"> 中对齐 </span><span class="token punctuation">|</span></span><span class="token table-line"><span class="token punctuation">|</span> <span class="token punctuation">:----</span> <span class="token punctuation">|</span> <span class="token punctuation">----:</span> <span class="token punctuation">|</span> <span class="token punctuation">:---:</span> <span class="token punctuation">|</span></span><span class="token table-data-rows"><span class="token punctuation">|</span><span class="token table-data"> 单元格 </span><span class="token punctuation">|</span><span class="token table-data"> 单元格 </span><span class="token punctuation">|</span><span class="token table-data"> 单元格 </span><span class="token punctuation">|</span><span class="token punctuation">|</span><span class="token table-data"> 单元格 </span><span class="token punctuation">|</span><span class="token table-data"> 单元格 </span><span class="token punctuation">|</span><span class="token table-data"> 单元格 </span><span class="token punctuation">|</span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>第一行为表头，第二行为分割表头和主体部分，第三行开始每一行为一个表格行。</p></li><li><p>列与列之间用管道符号 <code>|</code> 隔开，如果不使用对齐标记，内容默认左对齐，表头居中对齐</p></li></ul><hr><blockquote><p>-: 设置内容和标题栏居右对齐</p></blockquote><blockquote><p>:- 设置内容和标题栏居左对齐</p></blockquote><blockquote><p>:-: 设置内容和标题栏居中对齐</p></blockquote><hr><ul><li><p>为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用 <code>|</code> 来标记单元格边界</p></li><li><p>为了使 MarkDown 更清晰，<code>|</code> 和 <code>-</code> 两侧需要至少有一个空格（最左侧和最右侧的 <code>|</code> 外不需要）</p></li></ul><hr><h2 id="MarkDown-编写博文的更多技巧"><a class="header-anchor" href="#MarkDown-编写博文的更多技巧">☃</a>MarkDown 编写博文的更多技巧</h2><hr><h3 id="1-支持-HTML-元素"><a class="header-anchor" href="#1-支持-HTML-元素">☃</a>1. 支持 HTML 元素</h3><p>不在 MarkDown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><h3 id="2-转义"><a class="header-anchor" href="#2-转义">☃</a>2. 转义</h3><p>MarkDown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，MarkDown 使用反斜杠转义特殊字符。</p><p>MarkDown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号:</p><hr><ul><li><strong>\ 反斜线</strong></li><li><strong>` 反引号</strong></li><li><strong>星号 [*]</strong></li><li><strong>下划线</strong></li><li><strong>{} 花括号</strong></li><li><strong>[] 方括号</strong></li><li><strong>() 小括号</strong></li><li><strong># 井字号</strong></li><li><strong>+ 加号</strong></li><li><strong>- 减号</strong></li><li><strong>. 英文句点</strong></li><li><strong>! 感叹号</strong></li></ul><hr><h2 id="文字颜色、大小、字体背景色"><a class="header-anchor" href="#文字颜色、大小、字体背景色">☃</a>文字颜色、大小、字体背景色</h2><hr><h3 id="1-字体大小"><a class="header-anchor" href="#1-字体大小">☃</a>1. 字体大小</h3><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">size为1：&lt;font size="1"&gt;size为1&lt;/font&gt;                                     size为3：&lt;font size="3"&gt;size为3&lt;/font&gt;size为4：&lt;font size="4"&gt;size为4&lt;/font&gt;size为6：&lt;font size="6"&gt;size为6&lt;/font&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>size为1：<font size="1">size为1</font></p><p>size为3：<font size="3">size为3</font></p><p>size为4：<font size="4">size为4</font></p><p>size为6：<font size="6">size为6</font></p><hr><h3 id="2-颜色"><a class="header-anchor" href="#2-颜色">☃</a>2.颜色</h3><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;font color="#dd0000"&gt;文字颜色&lt;/font&gt; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><p><font color="#dd0000">文字颜色</font></p><hr><h3 id="3-背景色"><a class="header-anchor" href="#3-背景色">☃</a>3.背景色</h3><p>MarkDown 本身不支持背景色设置，需要采用内置 HTMML 的方式实现：借助 <code>table</code> , <code>tr</code> , <code>td</code> 等表格标签的 bgcolor 属性来实现背景色的功能。</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=orange&gt;背景色是：orange&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#FF00FF&gt;背景色的设置是按照十六进制颜色值：#7FFFD4&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#FF83FA&gt;背景色的设置是按照十六进制颜色值：#FF83FA&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#D1EEEE&gt;背景色的设置是按照十六进制颜色值：#D1EEEE&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#C0FF3E&gt;背景色的设置是按照十六进制颜色值：#C0FF3E&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#54FF9F&gt;背景色的设置是按照十六进制颜色值：#54FF9F&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><table><tbody><tr><td bgcolor="orange">背景色是：orange</td></tr></tbody></table><table><tbody><tr><td bgcolor="#FF00FF">背景色的设置是按照十六进制颜色值：#7FFFD4</td></tr></tbody></table><table><tbody><tr><td bgcolor="#FF83FA">背景色的设置是按照十六进制颜色值：#FF83FA</td></tr></tbody></table><table><tbody><tr><td bgcolor="#D1EEEE">背景色的设置是按照十六进制颜色值：#D1EEEE</td></tr></tbody></table><table><tbody><tr><td bgcolor="#C0FF3E">背景色的设置是按照十六进制颜色值：#C0FF3E</td></tr></tbody></table><table><tbody><tr><td bgcolor="#54FF9F">背景色的设置是按照十六进制颜色值：#54FF9F</td></tr></tbody></table><hr><hr><h2 id="使用-LaTex-数学公式"><a class="header-anchor" href="#使用-LaTex-数学公式">☃</a>使用 LaTex 数学公式</h2><hr><h3 id="1-行内公式"><a class="header-anchor" href="#1-行内公式">☃</a>1.行内公式</h3><p>使用两个 <strong>$</strong> 符号引用公式。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">$公式$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-行间公式"><a class="header-anchor" href="#2-行间公式">☃</a>2.行间公式</h3><p>使用两对 <strong>$$</strong> 符号引用公式。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">$$公式$$ <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <a href="https://www.mathjax.org/">MarkDown 数学符号官网</a>使用中，详细介绍了一些常用的数学公式。</p><hr><p>更多内容参考 <a href="http://markdown.p2hp.com/basic-syntax/">MarkDown 中文网</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> MarkDown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
